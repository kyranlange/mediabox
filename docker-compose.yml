##
## -------------------------
## |   M E D I A B O X     |
## -------------------------
##
## -- DO NOT EDIT THIS FILE --
##
## Configuration variables for this file are taken from the .env file
##
## Have docker-compose.yml and .env in the same directory to launch the stack

version: '3.5'

services:

    # ----------------------------------------
    # DELUGEVPN
    # ----------------------------------------
    arch-delugevpn:
        image: binhex/arch-delugevpn
        container_name: delugevpn
        restart: unless-stopped
        network_mode: "bridge"
        ports:
            - '${IP_ADDRESS}:8112:8112'
            - '${IP_ADDRESS}:8118:8118'
            - '${IP_ADDRESS}:58846:58846'
            - '${IP_ADDRESS}:58946:58946'
        cap_add:
            - NET_ADMIN
        environment:
            - VPN_ENABLED=yes
            - VPN_USER=${PIAUNAME}
            - VPN_PASS=${PIAPASS}
            - VPN_REMOTE=${VPN_REMOTE}
            - VPN_PORT=1198
            - VPN_PROTOCOL=udp
            - VPN_DEVICE_TYPE=tun
            - VPN_PROV=pia
            - STRONG_CERTS=no
            - ENABLE_PRIVOXY=yes
            - STRICT_PORT_FORWARD=yes
            - LAN_NETWORK=${CIDR_ADDRESS}
            - NAME_SERVERS=209.222.18.222,84.200.69.80,37.235.1.174,1.1.1.1,209.222.18.218,37.235.1.177,84.200.70.40,1.0.0.1
            - DEBUG=false
            - PUID=${PUID}
            - PGID=${PGID}
        volumes:
            - '${DLDIR}:/data'
            - './delugevpn/config:/config'
            - '/etc/localtime:/etc/localtime:ro'
    
    # ----------------------------------------
    # Docker Proxy
    # ----------------------------------------
    dockerproxy:
        image: ghcr.io/tecnativa/docker-socket-proxy:latest
        container_name: dockerproxy
        restart: unless-stopped
        network_mode: "bridge"
        environment:
            - CONTAINERS=1 # Allow access to viewing containers
            - POST=0 # Disallow any POST operations (effectively read-only)
        ports:
            - 127.0.0.1:2375:2375
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock:ro # Mounted as read-only

    # ----------------------------------------
    # GLANCES
    # ----------------------------------------
    glances:
        image: nicolargo/glances:latest-alpine
        container_name: glances
        restart: unless-stopped
        network_mode: "bridge"
        pid: host
        ports:
            - '${IP_ADDRESS}:61208:61208'
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
            - TZ=${TZ}
            - GLANCES_OPT=-w
        volumes:
            - './glances:/config'
            - '/var/run/docker.sock:/var/run/docker.sock:ro'

    # ----------------------------------------
    # HOMEPAGE
    # ----------------------------------------
    homepage:
        image: ghcr.io/benphelps/homepage:latest
        container_name: homepage
        restart: unless-stopped
        network_mode: "bridge"
        ports:
            - '${IP_ADDRESS}:80:3000'
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
            - TZ=${TZ}
        volumes:
            - './homepage:/app/config'

    # ----------------------------------------
    # JACKETT
    # ----------------------------------------
    jackett:
        image: linuxserver/jackett
        container_name: jackett
        restart: unless-stopped
        network_mode: "bridge"
        ports:
            - '${IP_ADDRESS}:9117:9117'
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
        volumes:
            - './jackett:/config'
            - '${DLDIR}/complete:/downloads'
            - '/etc/localtime:/etc/localtime:ro'

    # ----------------------------------------
    # LazyLibrarian
    # Book Management
    # ----------------------------------------
    lazylibrarian:
        image: linuxserver/lazylibrarian
        container_name: lazylibrarian
        restart: unless-stopped
        network_mode: "bridge"
        ports:
            - '${IP_ADDRESS}:5299:5299'
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
            - DOCKER_MODS=linuxserver/calibre-web:calibre #*optional* & **x86-64 only**
            - TZ=${TZ}
        volumes:
            - './lazylibrarian:/config'
            - '${DLDIR}/complete/books:/downloads'
            - '${BOOKDIR}:/books'
            - '/etc/localtime:/etc/localtime:ro'

    # ----------------------------------------
    # LIDARR
    # ----------------------------------------
    lidarr:
        image: linuxserver/lidarr
        container_name: lidarr
        restart: unless-stopped
        network_mode: "bridge"
        ports:
            - '${IP_ADDRESS}:8686:8686'
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
        volumes:
            - './lidarr:/config'
            - '${DLDIR}/complete:/data/complete'
            - '${MUSICDIR}:/music'
            - '/etc/localtime:/etc/localtime:ro'

    # ----------------------------------------
    # METUBE
    # ----------------------------------------
    metube:
        image: alexta69/metube
        container_name: metube
        restart: unless-stopped
        user: "${PUID}:${PGID}"
        network_mode: "bridge"
        ports:
            - '${IP_ADDRESS}:8281:8081'
        volumes:
            - '${MISCDIR}:/downloads'
            - './metube:/state'
            - '/etc/localtime:/etc/localtime:ro'

    # ----------------------------------------
    # NETDATA
    # ----------------------------------------
    netdata:
        image: netdata/netdata:latest
        container_name: netdata
        hostname: '${HOSTNAME}'
        restart: unless-stopped
        network_mode: "bridge"
        ports:
            - '${IP_ADDRESS}:19999:19999'
        cap_add:
            - SYS_PTRACE
        security_opt:
            - apparmor:unconfined
        environment:
            - PGID=${DOCKERGRP}
        volumes:
            - '/proc:/host/proc:ro'
            - '/sys:/host/sys:ro'
            - '/var/run/docker.sock:/var/run/docker.sock:rw'

    # ----------------------------------------
    # SABnzbd
    # ----------------------------------------
    arch-sabnzbdvpn:
        image: binhex/arch-sabnzbdvpn:3.5.3-1-03
        container_name: sabnzbdvpn
        restart: unless-stopped
        network_mode: 'bridge'
        ports:
            - '${IP_ADDRESS}:8080:8080'
            - '${IP_ADDRESS}:8090:8090'
        cap_add:
            - NET_ADMIN
        environment:
            - VPN_ENABLED=yes
            - VPN_USER=${PIAUNAME}
            - VPN_PASS=${PIAPASS}
            - VPN_REMOTE=${VPN_REMOTE}
            - VPN_PORT=1198
            - VPN_PROTOCOL=udp
            - VPN_DEVICE_TYPE=tun
            - VPN_PROV=pia
            - VPN_CLIENT=openvpn
            - STRONG_CERTS=no
            - ENABLE_PRIVOXY=no
            - STRICT_PORT_FORWARD=yes
            - LAN_NETWORK=${CIDR_ADDRESS}
            - NAME_SERVERS=209.222.18.222,84.200.69.80,37.235.1.174,1.1.1.1,209.222.18.218,37.235.1.177,84.200.70.40,1.0.0.1
            - DEBUG=false
            - PUID=${PUID}
            - PGID=${PGID}
        volumes:
            - '${DLDIR}:/data'
            - './sabnzbdvpn/config:/config'
            - '/etc/localtime:/etc/localtime:ro'

    # ----------------------------------------
    # OMBI
    # ----------------------------------------
    ombi:
        image: linuxserver/ombi
        container_name: ombi
        restart: unless-stopped
        network_mode: "bridge"
        ports:
            - '${IP_ADDRESS}:3579:3579'
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
        volumes:
            - './ombi:/config'
            - '/etc/localtime:/etc/localtime:ro'

    # ----------------------------------------
    # OUROBOROS
    # ----------------------------------------
    ouroboros:
        image: pyouroboros/ouroboros
        container_name: ouroboros
        restart: unless-stopped
        network_mode: "bridge"
        hostname: '${HOSTNAME}'
        environment:
            - CLEANUP=true
            - CRON="0 */6 * * *"
            - LOG_LEVEL=info
            - SELF_UPDATE=true
            - TZ=${TZ}
        volumes:
            - '/var/run/docker.sock:/var/run/docker.sock'

    # ----------------------------------------
    # PLEX
    # ----------------------------------------
    plex:
        container_name: plex
        image: plexinc/pms-docker:${PMSTAG}
        restart: unless-stopped
        network_mode: "host"
        ports:
            - '${IP_ADDRESS}:32400:32400/tcp'
            - '${IP_ADDRESS}:3005:3005/tcp'
            - '${IP_ADDRESS}:8324:8324/tcp'
            - '${IP_ADDRESS}:32469:32469/tcp'
            - '${IP_ADDRESS}:1900:1900/udp'
            - '${IP_ADDRESS}:32410:32410/udp'
            - '${IP_ADDRESS}:32412:32412/udp'
            - '${IP_ADDRESS}:32413:32413/udp'
            - '${IP_ADDRESS}:32414:32414/udp'
        environment:
            - PLEX_CLAIM=${PMSTOKEN}
            - ADVERTISE_IP=http://${IP_ADDRESS}:32400/
            - ALLOWED_NETWORKS=${CIDR_ADDRESS}
            - PLEX_UID=${PUID}
            - PLEX_GID=${PGID}
        hostname: ${HOSTNAME}
        volumes:
            - './plex:/config'
            - './plex/transcode:/transcode'
            - '${TVDIR}:/data/tvshows'
            - '${MOVIEDIR}:/data/movies'
            - '${MUSICDIR}:/data/music'
            - '/etc/localtime:/etc/localtime:ro'

    # ----------------------------------------
    # Plex Meta Manager
    # ----------------------------------------
    kometa:
        image: kometateam/kometa
        container_name: kometa
        restart: unless-stopped
        network_mode: "bridge"
        volumes:
            - './plex-meta-manager:/config:rw'
        depends_on:
            - plex

    # ----------------------------------------
    # PORTAINER
    # ----------------------------------------
    portainer:
        image: portainer/portainer-ce:latest
        container_name: portainer
        restart: unless-stopped
        network_mode: "bridge"
        ports:
            - '${IP_ADDRESS}:9000:9000'
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
        volumes:
            - './portainer:/data'
            - '/var/run/docker.sock:/var/run/docker.sock'
            - '/etc/localtime:/etc/localtime:ro'
        command: -H unix:///var/run/docker.sock

    # ----------------------------------------
    # RADARR
    # ----------------------------------------
    radarr:
        image: linuxserver/radarr
        container_name: radarr
        restart: unless-stopped
        network_mode: "bridge"
        ports:
            - '${IP_ADDRESS}:7878:7878'
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
        volumes:
            - './radarr:/config'
            - '${DLDIR}/complete:/data/complete'
            - '${MOVIEDIR}:/movies'
            - '/etc/localtime:/etc/localtime:ro'

    # ----------------------------------------
    # SONARR
    # ----------------------------------------
    sonarr:
        image: linuxserver/sonarr
        container_name: sonarr
        restart: unless-stopped
        network_mode: "bridge"
        ports:
            - '${IP_ADDRESS}:8989:8989'
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
            - TZ=${TZ}
        volumes:
            - './sonarr:/config'
            - '${DLDIR}/complete:/data/complete'
            - '${TVDIR}:/tv'
            - '/etc/localtime:/etc/localtime:ro'

    # ----------------------------------------
    # SPEEDTEST
    # ----------------------------------------
    speedtest:
        image: ghcr.io/alexjustesen/speedtest-tracker:latest
        container_name: speedtest-tracker
        restart: unless-stopped
        network_mode: "bridge"
        ports:
            - '${IP_ADDRESS}:8765:80'
        environment:
            - TZ=${TZ}
            - PGID=${PGID}
            - PUID=${PUID}
            - APP_KEY=${APP_KEY}

        volumes:
            - './speedtest:/config'

    # ----------------------------------------
    # TAUTULLI
    # ----------------------------------------
    tautulli:
        image: tautulli/tautulli
        container_name: tautulli
        restart: unless-stopped
        network_mode: "bridge"
        ports:
            - '${IP_ADDRESS}:8181:8181'
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
            - TZ=${TZ}
        volumes:
            - './tautulli:/config'
            - './plex/Library/Application Support/Plex Media Server/Logs:/logs:ro'
        depends_on:
            - plex
