##
## -------------------------
## |   M E D I A B O X     |
## -------------------------
##
## -- DO NOT EDIT THIS FILE --
##
## Configuration variables for this file are taken from the .env file
##
## Have docker-compose.yml and .env in the same directory to launch the stack

version: '3.5'

services:

    # ----------------------------------------
    # DELUGEVPN
    # ----------------------------------------
    arch-delugevpn:
        image: binhex/arch-delugevpn:1.3.15_18_ge050905b2-1-04
        container_name: delugevpn
        restart: unless-stopped
        networks:
            - web
        ports:
            - '${IP_ADDRESS}:8118:8118'
            - '${IP_ADDRESS}:58846:58846'
            - '${IP_ADDRESS}:58946:58946'
        expose:
            - 8112
        cap_add:
            - NET_ADMIN
        environment:
            - VPN_ENABLED=yes
            - VPN_USER=${PIAUNAME}
            - VPN_PASS=${PIAPASS}
            - VPN_REMOTE=${VPN_REMOTE}
            - VPN_PORT=1198
            - VPN_PROTOCOL=udp
            - VPN_DEVICE_TYPE=tun
            - VPN_PROV=pia
            - STRONG_CERTS=no
            - ENABLE_PRIVOXY=yes
            - STRICT_PORT_FORWARD=yes
            - LAN_NETWORK=${CIDR_ADDRESS}
            - NAME_SERVERS=209.222.18.222,84.200.69.80,37.235.1.174,1.1.1.1,209.222.18.218,37.235.1.177,84.200.70.40,1.0.0.1
            - DEBUG=false
            - PUID=${PUID}
            - PGID=${PGID}
        volumes:
            - '${DLDIR}:/data'
            - './delugevpn/config:/config'
            - '/etc/localtime:/etc/localtime:ro'
        labels:
            - 'traefik.enable=true'
            - 'traefik.docker.network=${STACK_NAME}_web'
            - 'traefik.port=8112'
            - 'traefik.frontend.rule=Host:deluge.${DOMAIN}'
            - 'traefik.frontend.entryPoints=https'
            - 'traefik.frontend.headers.forceSTSHeader=true'
            - 'traefik.frontend.headers.STSSeconds=315360000'
            - 'traefik.frontend.headers.STSIncludeSubdomains=true'
            - 'traefik.frontend.headers.STSPreload=true'

    # ----------------------------------------
    # JACKETT
    # ----------------------------------------
    jackett:
        image: linuxserver/jackett
        container_name: jackett
        restart: unless-stopped
        networks:
            - web
        expose:
            - 9117
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
        volumes:
            - './jackett:/config'
            - '${DLDIR}/complete:/downloads'
            - '/etc/localtime:/etc/localtime:ro'
        labels:
            - 'traefik.enable=true'
            - 'traefik.docker.network=${STACK_NAME}_web'
            - 'traefik.port=9117'
            - 'traefik.frontend.rule=Host:jackett.${DOMAIN}'
            - 'traefik.frontend.entryPoints=https'
            - 'traefik.frontend.headers.forceSTSHeader=true'
            - 'traefik.frontend.headers.STSSeconds=315360000'
            - 'traefik.frontend.headers.STSIncludeSubdomains=true'
            - 'traefik.frontend.headers.STSPreload=true'

    # ----------------------------------------
    # LIDARR
    # ----------------------------------------
    lidarr:
        image: linuxserver/lidarr
        container_name: lidarr
        restart: unless-stopped
        networks:
            - web
        expose:
            - 8686
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
            - TZ=${TZ}
        volumes:
            - './lidarr:/config'
            - '${DLDIR}/complete/music:/data/completed'
            - '${MUSICDIR}:/music'
            - '/etc/localtime:/etc/localtime:ro'
        labels:
            - 'traefik.enable=true'
            - 'traefik.docker.network=${STACK_NAME}_web'
            - 'traefik.port=8686'
            - 'traefik.frontend.rule=Host:lidarr.${DOMAIN}'
            - 'traefik.frontend.entryPoints=https'
            - 'traefik.frontend.headers.forceSTSHeader=true'
            - 'traefik.frontend.headers.STSSeconds=315360000'
            - 'traefik.frontend.headers.STSIncludeSubdomains=true'
            - 'traefik.frontend.headers.STSPreload=true'

    # ----------------------------------------
    # MUXIMUX
    # Web Frontend for HTPC Management
    # ----------------------------------------
    muximux:
        image: linuxserver/muximux
        container_name: muximux
        restart: unless-stopped
        networks:
            - web
        expose:
            - 80
        environment:
            - TZ=${TZ}
            - PUID=${PUID}
            - PGID=${PGID}
        volumes:
            - './muximux:/config'
            - '/etc/localtime:/etc/localtime:ro'
        labels:
            - 'traefik.enable=true'
            - 'traefik.docker.network=${STACK_NAME}_web'
            - 'traefik.port=80'
            - 'traefik.frontend.rule=Host:manage.${DOMAIN}'
            - 'traefik.frontend.entryPoints=https'
            - 'traefik.frontend.headers.forceSTSHeader=true'
            - 'traefik.frontend.headers.STSSeconds=315360000'
            - 'traefik.frontend.headers.STSIncludeSubdomains=true'
            - 'traefik.frontend.headers.STSPreload=true'

    # ----------------------------------------
    # NETDATA
    # System Resource Monitoring Service
    # ----------------------------------------
    netdata:
        image: netdata/netdata:latest
        container_name: netdata
        hostname: '${HOSTNAME}'
        restart: unless-stopped
        networks:
            - web
        expose:
            - 19999
        cap_add:
            - SYS_PTRACE
        security_opt:
            - apparmor:unconfined    
        environment:
            - PGID=${DOCKERGRP}
        volumes:
            - '/proc:/host/proc:ro'
            - '/sys:/host/sys:ro'
            - '/var/run/docker.sock:/var/run/docker.sock:rw'
        labels:
            - 'traefik.enable=true'
            - 'traefik.docker.network=${STACK_NAME}_web'
            - 'traefik.port=19999'
            - 'traefik.frontend.rule=Host:netdata.${DOMAIN}'
            - 'traefik.frontend.entryPoints=https'
            - 'traefik.frontend.headers.forceSTSHeader=true'
            - 'traefik.frontend.headers.STSSeconds=315360000'
            - 'traefik.frontend.headers.STSIncludeSubdomains=true'
            - 'traefik.frontend.headers.STSPreload=true'

    # ----------------------------------------
    # SABnzbd
    # ----------------------------------------
    arch-sabnzbdvpn:
        image: binhex/arch-sabnzbdvpn
        container_name: sabnzbdvpn
        restart: unless-stopped
        networks:
            - web
        expose:
            - 8080
        ports:
          - '${IP_ADDRESS}:8090:8090'
        cap_add:
          - NET_ADMIN
        environment:
            - VPN_ENABLED=yes
            - VPN_USER=${PIAUNAME}
            - VPN_PASS=${PIAPASS}
            - VPN_REMOTE=${VPN_REMOTE}
            - VPN_PORT=1198
            - VPN_PROTOCOL=udp
            - VPN_DEVICE_TYPE=tun
            - VPN_PROV=pia
            - STRONG_CERTS=no
            - ENABLE_PRIVOXY=no
            - STRICT_PORT_FORWARD=yes
            - LAN_NETWORK=${CIDR_ADDRESS}
            - NAME_SERVERS=209.222.18.222,84.200.69.80,37.235.1.174,1.1.1.1,209.222.18.218,37.235.1.177,84.200.70.40,1.0.0.1
            - DEBUG=false
            - PUID=${PUID}
            - PGID=${PGID}
        volumes:
            - '${DLDIR}:/data'
            - './sabnzbdvpn/config:/config'
            - '/etc/localtime:/etc/localtime:ro'
        labels:
            - 'traefik.enable=true'
            - 'traefik.docker.network=${STACK_NAME}_web'
            - 'traefik.port=8080'
            - 'traefik.frontend.rule=Host:sabnzbd.${DOMAIN}'
            - 'traefik.frontend.entryPoints=https'
            - 'traefik.frontend.headers.forceSTSHeader=true'
            - 'traefik.frontend.headers.STSSeconds=315360000'
            - 'traefik.frontend.headers.STSIncludeSubdomains=true'
            - 'traefik.frontend.headers.STSPreload=true'

    # ----------------------------------------
    # OMBI
    # Request Service for Plex Content
    # ----------------------------------------
    ombi:
        image: linuxserver/ombi
        container_name: ombi
        restart: unless-stopped
        networks:
            - web
        expose:
            - 3579
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
        volumes:
            - './ombi:/config'
            - '/etc/localtime:/etc/localtime:ro'
        labels:
            - 'traefik.enable=true'
            - 'traefik.docker.network=${STACK_NAME}_web'
            - 'traefik.port=3579'
            - 'traefik.frontend.rule=Host:request.${DOMAIN}'
            - 'traefik.frontend.entryPoints=https'
            - 'traefik.frontend.headers.forceSTSHeader=true'
            - 'traefik.frontend.headers.STSSeconds=315360000'
            - 'traefik.frontend.headers.STSIncludeSubdomains=true'
            - 'traefik.frontend.headers.STSPreload=true'

    # ----------------------------------------
    # OUROBOROS
    # Automatic Update Service for Docker VMs
    # ----------------------------------------
    ouroboros:
        image: pyouroboros/ouroboros
        container_name: ouroboros
        restart: unless-stopped
        networks:
            - internal
        hostname: '${HOSTNAME}'
        environment:
            - CLEANUP=true
            - CRON="0 */6 * * *"
            - LOG_LEVEL=info
            - SELF_UPDATE=true
            - TZ=${TZ}
        volumes:
            - '/var/run/docker.sock:/var/run/docker.sock'
        labels:
            - 'traefik.enable=false'

    # ----------------------------------------
    # PLEX
    # ----------------------------------------
    plex:
        container_name: plex
        image: plexinc/pms-docker:${PMSTAG}
        restart: unless-stopped
        networks:
            - web
        ports:
            - '${IP_ADDRESS}:32400:32400/tcp'
            - '${IP_ADDRESS}:3005:3005/tcp'
            - '${IP_ADDRESS}:8324:8324/tcp'
            - '${IP_ADDRESS}:32469:32469/tcp'
            - '${IP_ADDRESS}:1900:1900/udp'
            - '${IP_ADDRESS}:32410:32410/udp'
            - '${IP_ADDRESS}:32412:32412/udp'
            - '${IP_ADDRESS}:32413:32413/udp'
            - '${IP_ADDRESS}:32414:32414/udp'
        environment:
            - PLEX_CLAIM=${PMSTOKEN}
            - ADVERTISE_IP=http://${IP_ADDRESS}:32400/
            - ALLOWED_NETWORKS=${CIDR_ADDRESS}
            - PLEX_UID=${PUID}
            - PLEX_GID=${PGID}
        hostname: ${HOSTNAME}
        volumes:
            - './plex:/config'
            - './plex/transcode:/transcode'
            - '${TVDIR}:/data/tvshows'
            - '${MOVIEDIR}:/data/movies'
            - '${MUSICDIR}:/data/music'
            - '/etc/localtime:/etc/localtime:ro'
        labels:
            - 'traefik.enable=true'
            - 'traefik.docker.network=${STACK_NAME}_web'
            - 'traefik.port=32400'
            - 'traefik.frontend.rule=Host:plex.${DOMAIN}'
            - 'traefik.frontend.entryPoints=https'

    # ----------------------------------------
    # PORTAINER
    # Docker Container Management
    # ----------------------------------------
    portainer:
        image: portainer/portainer:latest
        container_name: portainer
        restart: unless-stopped
        networks:
            - web
        expose:
            - 9000
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
        volumes:
            - './portainer:/data'
            - '/var/run/docker.sock:/var/run/docker.sock'
            - '/etc/localtime:/etc/localtime:ro'
        command: ${PORTAINERSTYLE} -H unix:///var/run/docker.sock
        labels:
            - 'traefik.enable=true'
            - 'traefik.docker.network=${STACK_NAME}_web'
            - 'traefik.port=9000'
            - 'traefik.frontend.rule=Host:portainer.${DOMAIN}'
            - 'traefik.frontend.entryPoints=https'
            - 'traefik.frontend.headers.forceSTSHeader=true'
            - 'traefik.frontend.headers.STSSeconds=315360000'
            - 'traefik.frontend.headers.STSIncludeSubdomains=true'
            - 'traefik.frontend.headers.STSPreload=true'

    # ----------------------------------------
    # RADARR
    # Movie Management
    # ----------------------------------------
    radarr:
        image: linuxserver/radarr
        container_name: radarr
        restart: unless-stopped
        networks:
            - web
        expose:
            - 7878
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
        volumes:
            - './radarr:/config'
            - '${DLDIR}/complete/movies:/data/completed'
            - '${MOVIEDIR}:/movies'
            - '/etc/localtime:/etc/localtime:ro'
        labels:
            - 'traefik.enable=true'
            - 'traefik.docker.network=${STACK_NAME}_web'
            - 'traefik.port=7878'
            - 'traefik.frontend.rule=Host:radarr.${DOMAIN}'
            - 'traefik.frontend.entryPoints=https'
            - 'traefik.frontend.headers.forceSTSHeader=true'
            - 'traefik.frontend.headers.STSSeconds=315360000'
            - 'traefik.frontend.headers.STSIncludeSubdomains=true'
            - 'traefik.frontend.headers.STSPreload=true'

    # ----------------------------------------
    # SONARR
    # ----------------------------------------
    sonarr:
        image: linuxserver/sonarr
        container_name: sonarr
        restart: unless-stopped
        networks:
            - web
        expose:
            - 8989
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
            - TZ=${TZ}
        volumes:
            - './sonarr:/config'
            - '${DLDIR}/complete/tvshows:/data/completed'
            - '${TVDIR}:/tv'
            - '/etc/localtime:/etc/localtime:ro'
        labels:
            - 'traefik.enable=true'
            - 'traefik.docker.network=${STACK_NAME}_web'
            - 'traefik.port=8989'
            - 'traefik.frontend.rule=Host:sonarr.${DOMAIN}'
            - 'traefik.frontend.entryPoints=https'
            - 'traefik.frontend.headers.forceSTSHeader=true'
            - 'traefik.frontend.headers.STSSeconds=315360000'
            - 'traefik.frontend.headers.STSIncludeSubdomains=true'
            - 'traefik.frontend.headers.STSPreload=true'

  # ----------------------------------------
  # LazyLibrarian
  # Book Management
  # ----------------------------------------
    lazylibrarian:
      image: linuxserver/lazylibrarian
      container_name: lazylibrarian
      restart: unless-stopped
      networks:
        - web
      expose:
        - 5299
      environment:
        - PUID=${PUID}
        - PGID=${PGID}
        - DOCKER_MODS=linuxserver/calibre-web:calibre #*optional* & **x86-64 only**
        - TZ=${TZ}
      volumes:
        - ./lazylibrarian:/config
        - ${DLDIR}/complete/books:/downloads
        - ${BOOKDIR}:/books
        - '/etc/localtime:/etc/localtime:ro'
      labels:
        - 'traefik.enable=true'
        - 'traefik.docker.network=${STACK_NAME}_web'
        - 'traefik.port=5299'
        - 'traefik.frontend.rule=Host:lazylibrarian.${DOMAIN}'
        - 'traefik.frontend.entryPoints=https'
        - 'traefik.frontend.headers.forceSTSHeader=true'
        - 'traefik.frontend.headers.STSSeconds=315360000'
        - 'traefik.frontend.headers.STSIncludeSubdomains=true'
        - 'traefik.frontend.headers.STSPreload=true'

    # ----------------------------------------
    # TAUTULLI
    # Monitoring Service for PLEX Usage
    # ----------------------------------------
    tautulli:
        image: tautulli/tautulli
        container_name: tautulli
        restart: unless-stopped
        networks:
            - web
        expose:
            - 8181
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
            - TZ=${TZ}
        volumes:
            - './tautulli:/config'
            - './plex/Library/Application Support/Plex Media Server/Logs:/logs:ro'
        depends_on:
            - plex
        labels:
            - 'traefik.enable=true'
            - 'traefik.docker.network=${STACK_NAME}_web'
            - 'traefik.port=8181'
            - 'traefik.frontend.rule=Host:plexpy.${DOMAIN}'
            - 'traefik.frontend.entryPoints=https'
            - 'traefik.frontend.headers.forceSTSHeader=true'
            - 'traefik.frontend.headers.STSSeconds=315360000'
            - 'traefik.frontend.headers.STSIncludeSubdomains=true'
            - 'traefik.frontend.headers.STSPreload=true'

    # ----------------------------------------
    # TRAEFIK
    # Reverse Proxy + SSL Support
    # ----------------------------------------
    traefik:
        image: traefik
        container_name: traefik
        restart: unless-stopped
        networks:
            - web
        ports:
            - '80:80'
            - '443:443'
        expose:
            - 8080
        environment:
            - TZ=${TZ}
            - PUID=${PUID}
            - PGID=${PGID}
        volumes:
            - '/var/run/docker.sock:/var/run/docker.sock'
            - './traefik:/etc/traefik/acme'
        command:
            - --docker
            - --api
            - --loglevel=debug
            - "--entryPoints=Name:https Address::443 TLS"
            - "--entryPoints=Name:http Address::80 Redirect.EntryPoint:https"
            - --acme.entrypoint=https 
            - --acme=true 
            - --acme.domains=${DOMAIN}
            - --acme.email=${EMAIL}
            - --acme.ondemand=true 
            - --acme.onhostrule
            - --acme.httpchallenge
            - --acme.httpchallenge.entrypoint=http
            - --acme.storage=etc/traefik/acme/acme.json
            - --docker.watch
        networks:
            - web
        labels:
            - 'traefik.enable=true'
            - 'traefik.docker.network=${STACK_NAME}_web'
            - 'traefik.port=8080'
            - 'traefik.frontend.rule=Host:traefik.${DOMAIN}'
            - 'traefik.frontend.entryPoints=https'
            - 'traefik.frontend.auth.basic=${TRAEFIK_AUTH}'
            - 'traefik.frontend.headers.forceSTSHeader=true'
            - 'traefik.frontend.headers.STSSeconds=315360000'
            - 'traefik.frontend.headers.STSIncludeSubdomains=true'
            - 'traefik.frontend.headers.STSPreload=true'

########################
# GLOBAL CONFIGURATION #
########################

networks:
    internal:
    web:

